name: Build and Push Docker Image

on:
  release:
    types: [created]
    tags: ^(dev|uat|prd)_\d+\.\d+\.\d+$

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  build-and-push:
    if: ${{ github.event.release.tag_name && (startsWith(github.event.release.tag_name, 'dev_') || startsWith(github.event.release.tag_name, 'uat_') || startsWith(github.event.release.tag_name, 'prd_')) }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Extract environment name
        id: env
        run: |
          TAG=${{ github.event.release.tag_name }}
          ENV=$(echo $TAG | cut -d'_' -f1)
          echo "name=$ENV" >> $GITHUB_OUTPUT
      
      # - name: Create environment if not exists
      #   uses: actions/github-script@v7
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const env = '${{ steps.env.outputs.name }}';
      #       try {
      #         await github.rest.repos.getEnvironment({
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           environment_name: env
      #         });
      #         console.log(`Environment ${env} already exists`);
      #       } catch (error) {
      #         if (error.status === 404) {
      #           console.log(`Creating environment ${env}`);
      #           await github.rest.repos.createOrUpdateEnvironment({
      #             owner: context.repo.owner,
      #             repo: context.repo.repo,
      #             environment_name: env,
      #             deployment_branch_policy: null
      #           });
      #         } else {
      #           throw error;
      #         }
      #       }
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Convert GitHub actor to lowercase
        run: |
          echo "repository_owner=$(echo $GITHUB_REPOSITORY_OWNER | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract environment and version
        id: meta
        run: |
          TAG=${{ github.event.release.tag_name }}
          ENV=$(echo $TAG | cut -d'_' -f1)
          VERSION=$(echo $TAG | cut -d'_' -f2)
          echo "env=$ENV" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "image_name=ghcr.io/${{ env.repository_owner }}/personal-webpage" >> $GITHUB_OUTPUT
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.image_name }}:${{ steps.meta.outputs.env }}-${{ steps.meta.outputs.version }}
            ${{ steps.meta.outputs.image_name }}:${{ steps.meta.outputs.env }}-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max